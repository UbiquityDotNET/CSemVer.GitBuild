<Project TreatAsLocalProperty="_TaskFolder;_Ubiquity_NET_Versioning_Build_Tasks;__FileVersion">
    <PropertyGroup>
        <_TaskFolder Condition=" '$(MSBuildRuntimeType)' == 'Core' ">tasks\netstandard2.0\</_TaskFolder>
        <_TaskFolder Condition=" '$(MSBuildRuntimeType)' != 'Core' ">tasks\net48\</_TaskFolder>
        <_Ubiquity_NET_Versioning_Build_Tasks>$([MSBuild]::NormalizePath($(MSBuildThisFileDirectory)..\$(_TaskFolder)Ubiquity.NET.Versioning.Build.Tasks.dll))</_Ubiquity_NET_Versioning_Build_Tasks>
    </PropertyGroup>

    <UsingTask TaskName="CreateVersionInfo" AssemblyFile="$(_Ubiquity_NET_Versioning_Build_Tasks)"/>
    <UsingTask TaskName="GetBuildIndexFromTime" AssemblyFile="$(_Ubiquity_NET_Versioning_Build_Tasks)"/>
    <UsingTask TaskName="ParseBuildVersionXml" AssemblyFile="$(_Ubiquity_NET_Versioning_Build_Tasks)"/>

    <Target Name="PrepareVersioningForBuild"
            BeforeTargets="PrepareForBuild;_IntermediatePack"
            DependsOnTargets="GetRepositoryInfo;VerifyProvidedBuildVersion;SetVersionDependentProperties;"
            />

    <Target Name="GetRepositoryInfo">
        <!--
        Convert a time stamp into a usable CI Build index unless it is a release build.
        By definition, a release build is NOT a CI build so it should not get a default
        generated value for the index.
        -->
        <GetBuildIndexFromTime Condition="'$(CiBuildIndex)'=='' AND !$(IsReleaseBuild)"
                               TimeStamp="$(BuildTime)"
                               >
            <Output TaskParameter="BuildIndex" PropertyName="CiBuildIndex"/>
        </GetBuildIndexFromTime>

        <ParseBuildVersionXml Condition="'$(BuildMajor)'==''"
                              BuildVersionXml="$(BuildVersionXml)"
                              >
            <Output TaskParameter="BuildMajor" PropertyName="BuildMajor"/>
            <Output TaskParameter="BuildMinor" PropertyName="BuildMinor"/>
            <Output TaskParameter="BuildPatch" PropertyName="BuildPatch"/>
            <Output TaskParameter="PreReleaseName" PropertyName="PreReleaseName" />
            <Output TaskParameter="PreReleaseNumber" PropertyName="PreReleaseNumber" />
            <Output TaskParameter="PreReleaseFix" PropertyName="PreReleaseFix" />
        </ParseBuildVersionXml>

        <Error Condition="'$(BuildMajor)'==''" Code="CSM001" Text="BuildMajor is a required property, either set it as a global or in the build version XML"/>
        <Error Condition="'$(BuildMinor)'==''" Code="CSM002" Text="BuildMinor is a required property, either set it as a global or in the build version XML"/>
        <Error Condition="'$(BuildPatch)'==''" Code="CSM003" Text="BuildPatch is a required property, either set it as a global or in the build version XML"/>

        <!-- If FullBuildNumber not provided then generate version numbers/parts -->
        <CreateVersionInfo Condition ="'$(FullBuildNumber)'==''"
                           BuildMajor = "$(BuildMajor)"
                           BuildMinor = "$(BuildMinor)"
                           BuildPatch = "$(BuildPatch)"
                           PreReleaseName = "$(PreReleaseName)"
                           PreReleaseNumber = "$(PreReleaseNumber)"
                           PreReleaseFix = "$(PreReleaseFix)"
                           CiBuildName = "$(CiBuildName)"
                           CiBuildIndex = "$(CiBuildIndex)"
                           BuildMeta = "$(BuildMeta)"
                           >
            <Output TaskParameter="CSemVer" PropertyName="FullBuildNumber" />
            <Output TaskParameter="FileVersionMajor" PropertyName="FileVersionMajor" />
            <Output TaskParameter="FileVersionMinor" PropertyName="FileVersionMinor" />
            <Output TaskParameter="FileVersionBuild" PropertyName="FileVersionBuild" />
            <Output TaskParameter="FileVersionRevision" PropertyName="FileVersionRevision" />
            <Output TaskParameter="ShortCSemVer" PropertyName="PackageVersion"/>
        </CreateVersionInfo>
    </Target>

    <Target Name="SetVersionDependentProperties">
        <PropertyGroup>
            <__FileVersion>$(FileVersionMajor).$(FileVersionMinor).$(FileVersionBuild).$(FileVersionRevision)</__FileVersion>
            <FileVersion Condition="'$(FileVersion)'==''">$(__FileVersion)</FileVersion>
            <AssemblyVersion Condition="'$(AssemblyVersion)'==''">$(__FileVersion)</AssemblyVersion>
            <InformationalVersion Condition="$(InformationalVersion)==''">$(FullBuildNumber)</InformationalVersion>
        </PropertyGroup>
    </Target>

    <Target Name="VerifyProvidedBuildVersion" Condition="'$(FullBuildNumber)'!=''" >
        <Error Condition="'$(FileVersionMajor)'==''" Code="CSM004" Text="FileVersionMajor property not found"/>
        <Error Condition="'$(FileVersionMinor)'==''" Code="CSM005" Text="FileVersionMinor property not found"/>
        <Error Condition="'$(FileVersionRevision)'==''" Code="CSM006" Text="FileVersionRevision property not found"/>
        <Error Condition="'$(PackageVersion)'==''" Code="CSM007" Text="PackageVersion property not found"/>
    </Target>

    <!-- Generates include header for native code [Including Win32 Resource (.RC) ] -->
    <Target Name="GenerateVesionInfoHeader"
            Condition="'$(MSBuildProjectExtension)'=='.vcxproj' AND '$(GeneratedVersionInfoHeader)'!=''"
            BeforeTargets="ClCompile"
            >
        <ItemGroup>
            <VersionInfoGeneratedLine Include='#define FILE_VERSION_MAJOR $(FileVersionMajor)'/>
            <VersionInfoGeneratedLine Include='#define FILE_VERSION_MINOR $(FileVersionMinor)'/>
            <VersionInfoGeneratedLine Include='#define FILE_VERSION_BUILD $(FileVersionBuild)'/>
            <VersionInfoGeneratedLine Include='#define FILE_VERSION_REVISION $(FileVersionRevision)'/>
            <VersionInfoGeneratedLine Include='#define FILE_VERSION_STRING "$(FileVersion)"'/>
            <VersionInfoGeneratedLine Include=' '/>
            <VersionInfoGeneratedLine Include='#define PRODUCT_VERSION_MAJOR $(FileVersionMajor)'/>
            <VersionInfoGeneratedLine Include='#define PRODUCT_VERSION_MINOR $(FileVersionMinor)'/>
            <VersionInfoGeneratedLine Include='#define PRODUCT_VERSION_BUILD $(FileVersionBuild)'/>
            <VersionInfoGeneratedLine Include='#define PRODUCT_VERSION_REVISION $(FileVersionRevision)'/>
            <VersionInfoGeneratedLine Include='#define PRODUCT_VERSION_STRING "$(FileVersion)"'/>
        </ItemGroup>
        <Message Importance="high" Text="Generating $(GeneratedVersionInfoHeader)" />
        <WriteLinesToFile File="$(IntermediateOutputPath)$(GeneratedVersionInfoHeader)" Overwrite="true" Lines="@(VersionInfoGeneratedLine)" />
    </Target>

    <!-- Generate a C# source file with Assembly and file version attributes and include it in the compilation -->
    <!-- For legacy projects only - for newer projects this functionality is built into the new CPS based CSproj files -->
    <Target Name="GenerateAssemblyVersionInfoCS"
            Condition="'$(MSBuildProjectExtension)'=='.csproj' AND '$(GenerateAssemblyInfo)'==''"
            BeforeTargets="CoreCompile"
            >
        <ItemGroup>
            <AssemblyVersionInfoGeneratedLine Include="// &lt;auto-generated/&gt;"/>
            <AssemblyVersionInfoGeneratedLine Include="using System.Reflection%3B"/>
            <AssemblyVersionInfoGeneratedLine Include='[assembly: AssemblyVersion("$(FileVersion)")]'/>
            <AssemblyVersionInfoGeneratedLine Include='[assembly: AssemblyFileVersion("$(FileVersion)")]'/>
            <AssemblyVersionInfoGeneratedLine Include='[assembly: AssemblyInformationalVersion("$(InformationalVersion)")]'/>
        </ItemGroup>
        <Message Importance='normal' Text="Generating: $(IntermediateOutputPath)AssemblyVersionInfo.g.cs" />
        <WriteLinesToFile File="$(IntermediateOutputPath)AssemblyVersionInfo.g.cs" Overwrite="true" Lines="@(AssemblyVersionInfoGeneratedLine)" />
        <ItemGroup>
            <Compile Include="$(IntermediateOutputPath)AssemblyVersionInfo.g.cs"/>
        </ItemGroup>
    </Target>
</Project>
